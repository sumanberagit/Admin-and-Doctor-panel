{"ast":null,"code":"var _jsxFileName = \"C:\\\\Admin-and-doctor-dashboard\\\\dashboard\\\\src\\\\pages\\\\Calandar\\\\CalendarWithTimePicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"tailwindcss/tailwind.css\";\nimport BaseLayout from \"../../layouts/BaseLayout\";\nimport axios from \"axios\"; // Import axios for API calls\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst AttendanceCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [dailyAttendance, setDailyAttendance] = useState([]);\n  const [apLeave, setApLeave] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [startTime, setStartTime] = useState(\"09:00\");\n  const [endTime, setEndTime] = useState(\"17:00\");\n  const [timeRanges, setTimeRanges] = useState({}); // To store time ranges for each date\n  const [dateTimes, setDateTimes] = useState({});\n  const token = useSelector(state => state.token);\n  const today = new Date();\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const populateMonthDropdown = () => {\n    return monthNames.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: month\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this));\n  };\n  const populateYearDropdown = () => {\n    const currentYear = today.getFullYear();\n    const previousYears = [currentYear - 2, currentYear - 1, currentYear, currentYear + 1, currentYear + 2, currentYear + 3, currentYear + 4, currentYear + 5];\n    return previousYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: year,\n      children: year\n    }, year, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this));\n  };\n  useEffect(() => {\n    const fetchCheckupDates = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/doctor/dates\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success && Array.isArray(response.data.datesAndTimes)) {\n          const fetchedData = {};\n          response.data.datesAndTimes.forEach(item => {\n            const times = item.timeRanges.map(timeRange => ({\n              startTime: timeRange.startTime,\n              endTime: timeRange.endTime\n            }));\n            fetchedData[item.date] = times;\n          });\n          setDateTimes(fetchedData);\n        } else {\n          console.error(\"Unexpected response structure\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching dates: \", error);\n      }\n    };\n    fetchCheckupDates();\n  }, [token]);\n  const getAttendanceStatus = (day, month, year) => {\n    return {\n      status: \"Absent\"\n    };\n  };\n  const generateCalendar = (month, year) => {\n    const firstDay = new Date(year, month).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const offset = firstDay === 0 ? 6 : firstDay - 1;\n    const dates = [];\n\n    // Previous month's days\n    for (let i = offset; i > 0; i--) {\n      dates.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/7 bg-gray-200 text-gray-500 py-2 text-center\",\n        children: prevMonthDays - i + 1\n      }, `prev-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Current month's days\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dateKey = `${year}-${month + 1}-${day}`; // Adjust month to be 1-indexed\n      const hasTimeRanges = timeRanges[dateKey];\n      const eventClass = hasTimeRanges ? \"bg-green-100 border-l-4 border-green-500\" : \"bg-red-100 border-l-4 border-red-500\";\n\n      // Display all time ranges if they exist\n      const timeText = hasTimeRanges ? hasTimeRanges.map(range => `${range.startTime} - ${range.endTime}`).join(\", \") : \"\";\n      dates.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-1/7 p-2 text-center h-[100px] flex flex-col justify-center ${eventClass} cursor-pointer`,\n        onClick: () => handleDateClick(day, month, year),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), hasTimeRanges && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: timeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), \" \"]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this));\n    }\n    return dates;\n  };\n  const handleDateClick = (day, month, year) => {\n    setSelectedDate(new Date(year, month, day));\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Function to save selected time range and send to API\n  // Function to save selected time range and send to API\n  // Function to save selected time range and send to API\n  const handleTimeSave = async () => {\n    if (startTime && endTime && selectedDate) {\n      const dateKey = `${selectedDate.getFullYear()}-${selectedDate.getMonth() + 1}-${selectedDate.getDate()}`; // Adjust month to be 1-indexed\n\n      const payload = {\n        date: selectedDate.toISOString().split(\"T\")[0],\n        timeRanges: [{\n          startTime,\n          endTime\n        }]\n      };\n      try {\n        const response = await axios.post(\"http://localhost:8080/doctor/set-checkup-times\", payload, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"API response: \", response.data);\n\n        // Update local state with the time range for selected date\n        setTimeRanges(prevRanges => ({\n          ...prevRanges,\n          [dateKey]: [{\n            startTime,\n            endTime\n          }] // Store as an array\n        }));\n        setIsModalOpen(false); // Close modal after saving\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error setting checkup time: \", error.response ? error.response.data : error);\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || \"Failed to save checkup time. Please try again.\");\n      }\n    } else {\n      alert(\"Please select both start and end time\");\n    }\n  };\n  useEffect(() => {\n    setDailyAttendance([]);\n    setApLeave([]);\n  }, []);\n  const handleMonthChange = e => {\n    setCurrentDate(new Date(currentDate.getFullYear(), parseInt(e.target.value), 1));\n  };\n  const handleYearChange = e => {\n    setCurrentDate(new Date(parseInt(e.target.value), currentDate.getMonth(), 1));\n  };\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full p-4 bg-white rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: \"Set Future Check-Up Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-lg\",\n            onClick: () => setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1)),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-lg ml-2\",\n            onClick: () => setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1)),\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"ml-4 border-none\",\n            value: currentDate.getMonth(),\n            onChange: handleMonthChange,\n            children: populateMonthDropdown()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"ml-2 border-none\",\n            value: currentDate.getFullYear(),\n            onChange: handleYearChange,\n            children: populateYearDropdown()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center bg-gray-800 text-white py-2\",\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 gap-4 mt-4 \",\n        children: generateCalendar(currentDate.getMonth(), currentDate.getFullYear())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: closeModal,\n        className: \"bg-white p-6 rounded-lg max-w-md mx-auto my-20\",\n        overlayClassName: \"bg-gray-500 bg-opacity-75 fixed inset-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Select Time Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 text-sm font-medium\",\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            className: \"w-full px-4 py-2 border rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2 text-sm font-medium\",\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: endTime,\n            onChange: e => setEndTime(e.target.value),\n            className: \"w-full px-4 py-2 border rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTimeSave,\n            className: \"px-6 py-2 bg-blue-500 text-white rounded-lg mr-2\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceCalendar, \"E+Qdp1A1tnd3p2CaUi+Zz1JMC+E=\", false, function () {\n  return [useSelector];\n});\n_c = AttendanceCalendar;\nexport default AttendanceCalendar;\nvar _c;\n$RefreshReg$(_c, \"AttendanceCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Modal","BaseLayout","axios","useSelector","jsxDEV","_jsxDEV","setAppElement","AttendanceCalendar","_s","currentDate","setCurrentDate","Date","dailyAttendance","setDailyAttendance","apLeave","setApLeave","selectedDate","setSelectedDate","isModalOpen","setIsModalOpen","startTime","setStartTime","endTime","setEndTime","timeRanges","setTimeRanges","dateTimes","setDateTimes","token","state","today","monthNames","populateMonthDropdown","map","month","index","value","children","fileName","_jsxFileName","lineNumber","columnNumber","populateYearDropdown","currentYear","getFullYear","previousYears","year","fetchCheckupDates","response","get","headers","Authorization","data","success","Array","isArray","datesAndTimes","fetchedData","forEach","item","times","timeRange","date","console","error","getAttendanceStatus","day","status","generateCalendar","firstDay","getDay","daysInMonth","getDate","prevMonthDays","offset","dates","i","push","className","dateKey","hasTimeRanges","eventClass","timeText","range","join","onClick","handleDateClick","closeModal","handleTimeSave","getMonth","payload","toISOString","split","post","log","prevRanges","_error$response","alert","message","handleMonthChange","e","parseInt","target","handleYearChange","onChange","isOpen","onRequestClose","overlayClassName","type","_c","$RefreshReg$"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Calandar/CalendarWithTimePicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport BaseLayout from \"../../layouts/BaseLayout\";\r\nimport axios from \"axios\"; // Import axios for API calls\r\nimport { useSelector } from \"react-redux\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst AttendanceCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [dailyAttendance, setDailyAttendance] = useState([]);\r\n  const [apLeave, setApLeave] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [startTime, setStartTime] = useState(\"09:00\");\r\n  const [endTime, setEndTime] = useState(\"17:00\");\r\n  const [timeRanges, setTimeRanges] = useState({}); // To store time ranges for each date\r\n  const [dateTimes, setDateTimes] = useState({});\r\n\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const today = new Date();\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const populateMonthDropdown = () => {\r\n    return monthNames.map((month, index) => (\r\n      <option key={index} value={index}>\r\n        {month}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const populateYearDropdown = () => {\r\n    const currentYear = today.getFullYear();\r\n    const previousYears = [\r\n      currentYear - 2,\r\n      currentYear - 1,\r\n      currentYear,\r\n      currentYear + 1,\r\n      currentYear + 2,\r\n      currentYear + 3,\r\n      currentYear + 4,\r\n      currentYear + 5,\r\n    ];\r\n    return previousYears.map((year) => (\r\n      <option key={year} value={year}>\r\n        {year}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCheckupDates = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/doctor/dates\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (\r\n          response.data.success &&\r\n          Array.isArray(response.data.datesAndTimes)\r\n        ) {\r\n          const fetchedData = {};\r\n\r\n          response.data.datesAndTimes.forEach((item) => {\r\n            const times = item.timeRanges.map((timeRange) => ({\r\n              startTime: timeRange.startTime,\r\n              endTime: timeRange.endTime,\r\n            }));\r\n            fetchedData[item.date] = times;\r\n          });\r\n\r\n          setDateTimes(fetchedData);\r\n        } else {\r\n          console.error(\"Unexpected response structure\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching dates: \", error);\r\n      }\r\n    };\r\n\r\n    fetchCheckupDates();\r\n  }, [token]);\r\n\r\n  const getAttendanceStatus = (day, month, year) => {\r\n    return { status: \"Absent\" };\r\n  };\r\n\r\n  const generateCalendar = (month, year) => {\r\n    const firstDay = new Date(year, month).getDay();\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const prevMonthDays = new Date(year, month, 0).getDate();\r\n\r\n    const offset = firstDay === 0 ? 6 : firstDay - 1;\r\n    const dates = [];\r\n\r\n    // Previous month's days\r\n    for (let i = offset; i > 0; i--) {\r\n      dates.push(\r\n        <div\r\n          key={`prev-${i}`}\r\n          className=\"w-1/7 bg-gray-200 text-gray-500 py-2 text-center\"\r\n        >\r\n          {prevMonthDays - i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Current month's days\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const dateKey = `${year}-${month + 1}-${day}`; // Adjust month to be 1-indexed\r\n      const hasTimeRanges = timeRanges[dateKey];\r\n\r\n      const eventClass = hasTimeRanges\r\n        ? \"bg-green-100 border-l-4 border-green-500\"\r\n        : \"bg-red-100 border-l-4 border-red-500\";\r\n\r\n      // Display all time ranges if they exist\r\n      const timeText = hasTimeRanges\r\n        ? hasTimeRanges\r\n            .map((range) => `${range.startTime} - ${range.endTime}`)\r\n            .join(\", \")\r\n        : \"\";\r\n\r\n      dates.push(\r\n        <div\r\n          key={day}\r\n          className={`w-1/7 p-2 text-center h-[100px] flex flex-col justify-center ${eventClass} cursor-pointer`}\r\n          onClick={() => handleDateClick(day, month, year)}\r\n        >\r\n          <div>{day}</div>\r\n          {hasTimeRanges && <div className=\"text-sm\">{timeText}</div>}{\" \"}\r\n          {/* Display time ranges */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const handleDateClick = (day, month, year) => {\r\n    setSelectedDate(new Date(year, month, day));\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Function to save selected time range and send to API\r\n  // Function to save selected time range and send to API\r\n  // Function to save selected time range and send to API\r\n  const handleTimeSave = async () => {\r\n    if (startTime && endTime && selectedDate) {\r\n      const dateKey = `${selectedDate.getFullYear()}-${\r\n        selectedDate.getMonth() + 1\r\n      }-${selectedDate.getDate()}`; // Adjust month to be 1-indexed\r\n\r\n      const payload = {\r\n        date: selectedDate.toISOString().split(\"T\")[0],\r\n        timeRanges: [{ startTime, endTime }],\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8080/doctor/set-checkup-times\",\r\n          payload,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"API response: \", response.data);\r\n\r\n        // Update local state with the time range for selected date\r\n        setTimeRanges((prevRanges) => ({\r\n          ...prevRanges,\r\n          [dateKey]: [{ startTime, endTime }], // Store as an array\r\n        }));\r\n\r\n        setIsModalOpen(false); // Close modal after saving\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error setting checkup time: \",\r\n          error.response ? error.response.data : error\r\n        );\r\n        alert(\r\n          error.response?.data.message ||\r\n            \"Failed to save checkup time. Please try again.\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Please select both start and end time\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDailyAttendance([]);\r\n    setApLeave([]);\r\n  }, []);\r\n\r\n  const handleMonthChange = (e) => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), parseInt(e.target.value), 1)\r\n    );\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    setCurrentDate(\r\n      new Date(parseInt(e.target.value), currentDate.getMonth(), 1)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"w-full p-4 bg-white rounded-lg shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-lg font-semibold\">Set Future Check-Up Time</h3>\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              className=\"text-lg\"\r\n              onClick={() =>\r\n                setCurrentDate(\r\n                  new Date(\r\n                    currentDate.getFullYear(),\r\n                    currentDate.getMonth() - 1,\r\n                    1\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              &larr;\r\n            </button>\r\n            <button\r\n              className=\"text-lg ml-2\"\r\n              onClick={() =>\r\n                setCurrentDate(\r\n                  new Date(\r\n                    currentDate.getFullYear(),\r\n                    currentDate.getMonth() + 1,\r\n                    1\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              &rarr;\r\n            </button>\r\n            <select\r\n              className=\"ml-4 border-none\"\r\n              value={currentDate.getMonth()}\r\n              onChange={handleMonthChange}\r\n            >\r\n              {populateMonthDropdown()}\r\n            </select>\r\n            <select\r\n              className=\"ml-2 border-none\"\r\n              value={currentDate.getFullYear()}\r\n              onChange={handleYearChange}\r\n            >\r\n              {populateYearDropdown()}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-7 gap-4\">\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Mon</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Tue</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Wed</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Thu</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Fri</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Sat</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Sun</div>\r\n        </div>\r\n        <div className=\"grid grid-cols-7 gap-4 mt-4 \">\r\n          {generateCalendar(currentDate.getMonth(), currentDate.getFullYear())}\r\n        </div>\r\n\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onRequestClose={closeModal}\r\n          className=\"bg-white p-6 rounded-lg max-w-md mx-auto my-20\"\r\n          overlayClassName=\"bg-gray-500 bg-opacity-75 fixed inset-0\"\r\n        >\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Select Time Range</h2>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block mb-2 text-sm font-medium\">\r\n              Start Time:\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              value={startTime}\r\n              onChange={(e) => setStartTime(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block mb-2 text-sm font-medium\">End Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              value={endTime}\r\n              onChange={(e) => setEndTime(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              onClick={handleTimeSave}\r\n              className=\"px-6 py-2 bg-blue-500 text-white rounded-lg mr-2\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              onClick={closeModal}\r\n              className=\"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default AttendanceCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}