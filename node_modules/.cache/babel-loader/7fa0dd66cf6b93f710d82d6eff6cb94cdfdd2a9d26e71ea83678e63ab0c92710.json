{"ast":null,"code":"var _jsxFileName = \"C:\\\\Admin-and-doctor-dashboard\\\\dashboard\\\\src\\\\pages\\\\Dashboard\\\\components\\\\appointment\\\\Appointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../../../../App.css\";\nimport axios from \"axios\";\nimport Icon from \"../../../../assets/images/users-vector-icon-png_260862.jpg\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Appointment = () => {\n  _s();\n  // State to hold the list of doctors and appointments\n  const [doctors, setDoctors] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userType = useSelector(state => state.setUserType);\n  const userId = useSelector(state => state.setUserId);\n\n  // Fetch data based on userType\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        if (userType === 1) {\n          // Fetch doctors data\n          const response = await axios.get(\"https://consultant-backend-jiwv.onrender.com/public/doctor\");\n          setDoctors(response.data.doctors); // Assuming the response contains a 'doctors' array\n        } else if (userType === 2) {\n          // Fetch appointments data\n          const response = await axios.get(\"https://consultant-backend-jiwv.onrender.com/appointment/all-appointments\");\n          setAppointments(response.data); // Assuming the response contains an 'appointments' array\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userType]); // Dependency array includes userType to refetch data if userType changes\n\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toISOString().split(\"T\")[0]; // Returns date in YYYY-MM-DD format\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex row space-x-4 mx-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-6 bg-white rounded-lg shadow-md w-96 mb-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4 border-b py-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"calendar\",\n            className: \"mr-2\",\n            children: \"\\uD83D\\uDCC5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), userType === 1 ? \"Latest Doctors\" : \"Latest Appointments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-500\",\n          children: userType === 1 ? `${doctors.length} Doctors` : `${appointments.length} Appointments`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"doctor-card-scroll\",\n        children: userType === 1 ? doctors.length > 0 ? doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center justify-between py-2 last:border-b-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: Icon // Assuming the doctor object has an 'image' field\n              ,\n              className: \"w-10 h-10 rounded-full mr-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: [doctor.firstName, \" \", doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm\",\n                children: [\"Speciality: \", doctor.Departments]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No doctors found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this) : userType === 2 ? appointments.length > 0 ? appointments.map((appointment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center justify-between py-2 last:border-b-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"font-medium\",\n                children: [\"Appointment with \", appointment.doctor.firstName, \" \", appointment.doctor.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 text-sm\",\n                children: [\"Date: \", formatDate(appointment.date)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No appointments found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Appointment, \"Swku2zrp5z42FRwtbxv1Y63okm8=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Appointment;\nexport default Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["React","useState","useEffect","axios","Icon","useSelector","jsxDEV","_jsxDEV","Appointment","_s","doctors","setDoctors","appointments","setAppointments","loading","setLoading","userType","state","setUserType","userId","setUserId","fetchData","response","get","data","error","console","formatDate","dateString","date","Date","toISOString","split","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","length","map","doctor","index","src","firstName","lastName","Departments","appointment","_c","$RefreshReg$"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Dashboard/components/appointment/Appointment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../../../../App.css\";\r\nimport axios from \"axios\";\r\nimport Icon from \"../../../../assets/images/users-vector-icon-png_260862.jpg\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Appointment = () => {\r\n  // State to hold the list of doctors and appointments\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const userType = useSelector((state) => state.setUserType);\r\n  const userId = useSelector((state) => state.setUserId);\r\n\r\n  // Fetch data based on userType\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (userType === 1) {\r\n          // Fetch doctors data\r\n          const response = await axios.get(\r\n            \"https://consultant-backend-jiwv.onrender.com/public/doctor\"\r\n          );\r\n          setDoctors(response.data.doctors); // Assuming the response contains a 'doctors' array\r\n        } else if (userType === 2) {\r\n          // Fetch appointments data\r\n          const response = await axios.get(\r\n            \"https://consultant-backend-jiwv.onrender.com/appointment/all-appointments\"\r\n          );\r\n          setAppointments(response.data); // Assuming the response contains an 'appointments' array\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userType]); // Dependency array includes userType to refetch data if userType changes\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toISOString().split(\"T\")[0]; // Returns date in YYYY-MM-DD format\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex row space-x-4 mx-5\">\r\n      <div className=\"p-6 bg-white rounded-lg shadow-md w-96 mb-10\">\r\n        <div className=\"flex justify-between items-center mb-4 border-b py-3\">\r\n          <h2 className=\"text-lg font-semibold\">\r\n            <span role=\"img\" aria-label=\"calendar\" className=\"mr-2\">\r\n              📅\r\n            </span>\r\n            {userType === 1 ? \"Latest Doctors\" : \"Latest Appointments\"}\r\n          </h2>\r\n          <span className=\"text-gray-500\">\r\n            {userType === 1\r\n              ? `${doctors.length} Doctors`\r\n              : `${appointments.length} Appointments`}\r\n          </span>\r\n        </div>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <ul className=\"doctor-card-scroll\">\r\n            {userType === 1 ? (\r\n              doctors.length > 0 ? (\r\n                doctors.map((doctor, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className=\"flex items-center justify-between py-2 last:border-b-0\"\r\n                  >\r\n                    <div className=\"flex items-center\">\r\n                      <img\r\n                        src={Icon} // Assuming the doctor object has an 'image' field\r\n                        className=\"w-10 h-10 rounded-full mr-4\"\r\n                      />\r\n                      <div>\r\n                        <p className=\"font-medium\">\r\n                          {doctor.firstName} {doctor.lastName}\r\n                        </p>{\" \"}\r\n                        {/* Doctor name */}\r\n                        <p className=\"text-gray-500 text-sm\">\r\n                          Speciality: {doctor.Departments}\r\n                        </p>{\" \"}\r\n                        {/* Doctor speciality */}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <p>No doctors found</p>\r\n              )\r\n            ) : userType === 2 ? (\r\n              appointments.length > 0 ? (\r\n                appointments.map((appointment, index) => (\r\n                  <li\r\n                    key={index}\r\n                    className=\"flex items-center justify-between py-2 last:border-b-0\"\r\n                  >\r\n                    <div className=\"flex items-center\">\r\n                      {/* Customize this section based on your appointment data */}\r\n                      <div>\r\n                        <p className=\"font-medium\">\r\n                          Appointment with {appointment.doctor.firstName}{\" \"}\r\n                          {appointment.doctor.lastName}\r\n                        </p>\r\n                        <p className=\"text-gray-500 text-sm\">\r\n                          Date: {formatDate(appointment.date)}\r\n                        </p>\r\n                        {/* Add more fields as needed */}\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                ))\r\n              ) : (\r\n                <p>No appointments found</p>\r\n              )\r\n            ) : null}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}