{"ast":null,"code":"var _jsxFileName = \"C:\\\\Admin-and-doctor-dashboard\\\\dashboard\\\\src\\\\pages\\\\Dashboard\\\\components\\\\charts\\\\RoundedChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst yearOptions = [2022, 2021];\nconst RoundedChart = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const userType = useSelector(state => state.setUserType);\n  const userId = useSelector(state => state.setUserId);\n  const [totalAppointments, setTotalAppointments] = useState(0); // Total appointments\n\n  const [chartOptions, setChartOptions] = useState({\n    series: [0, 0, 0],\n    // Initial percentages for Male, Female, Others\n    options: {\n      chart: {\n        height: 400,\n        type: \"radialBar\"\n      },\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              fontSize: \"22px\"\n            },\n            value: {\n              fontSize: \"16px\"\n            },\n            total: {\n              show: true,\n              label: \"Total\",\n              formatter: function (w) {\n                return totalAppointments; // Display total appointments in the center\n              }\n            }\n          }\n        }\n      },\n      labels: [\"Male\", \"Female\", \"Others\"]\n    }\n  });\n\n  // Fetch appointments based on userType\n  useEffect(() => {\n    const fetchAppointments = async () => {\n      let apiUrl = \"\";\n      if (userType === 1) {\n        apiUrl = \"https://consultant-backend-jiwv.onrender.com/appointment/all-appointments\";\n      } else if (userType === 2) {\n        apiUrl = `https://consultant-backend-jiwv.onrender.com/doctor/${userId}/appointments`;\n      }\n      try {\n        const response = await axios.get(apiUrl);\n        const appointments = response.data.appointments;\n\n        // Process the gender data\n        const genderCounts = {\n          male: 0,\n          female: 0,\n          others: 0\n        };\n        appointments.forEach(appointment => {\n          const gender = appointment.user.gender.toLowerCase();\n          if (gender === \"male\") genderCounts.male++;else if (gender === \"female\") genderCounts.female++;else genderCounts.others++;\n        });\n        const total = genderCounts.male + genderCounts.female + genderCounts.others;\n        setTotalAppointments(total); // Set total appointments\n\n        const malePercentage = (genderCounts.male / total * 100).toFixed(2);\n        const femalePercentage = (genderCounts.female / total * 100).toFixed(2);\n        const othersPercentage = (genderCounts.others / total * 100).toFixed(2);\n\n        // Update the chart data\n        setChartOptions(prevOptions => ({\n          ...prevOptions,\n          series: [malePercentage, femalePercentage, othersPercentage]\n        }));\n      } catch (error) {\n        console.error(\"Error fetching appointments:\", error);\n      }\n    };\n    fetchAppointments();\n  }, [userType, userId]);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = year => {\n    setIsOpen(false);\n    // Additional logic for year selection if needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" my-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between mx-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \" text-lg font-bold items-center justify-center flex\",\n        children: \"Patients visit by Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"button\",\n          onClick: toggleDropdown,\n          className: \"px-3 py-2 light-bg-L border border-[#667fd1] head-6 green-H flex items-center gap-2 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-list-container dropdown-end light-bg-L dark-M body-N p-2 shadow rounded-box\",\n          style: {\n            width: \"140px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-list\",\n            children: yearOptions === null || yearOptions === void 0 ? void 0 : yearOptions.map((el, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              role: \"button\",\n              onClick: () => handleSelect(el),\n              className: \"cursor-pointer hover:bg-gray-200 p-2 rounded\",\n              children: el\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: chartOptions.options,\n        series: chartOptions.series,\n        type: \"radialBar\",\n        height: 400\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"html-dist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(RoundedChart, \"SkI5UuM13ttW1lbj47ITOu+O5Lk=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = RoundedChart;\nexport default RoundedChart;\nvar _c;\n$RefreshReg$(_c, \"RoundedChart\");","map":{"version":3,"names":["React","useState","useEffect","ReactApexChart","ChevronDownIcon","useSelector","axios","jsxDEV","_jsxDEV","yearOptions","RoundedChart","_s","isOpen","setIsOpen","userType","state","setUserType","userId","setUserId","totalAppointments","setTotalAppointments","chartOptions","setChartOptions","series","options","chart","height","type","plotOptions","radialBar","dataLabels","name","fontSize","value","total","show","label","formatter","w","labels","fetchAppointments","apiUrl","response","get","appointments","data","genderCounts","male","female","others","forEach","appointment","gender","user","toLowerCase","malePercentage","toFixed","femalePercentage","othersPercentage","prevOptions","error","console","toggleDropdown","handleSelect","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","style","width","map","el","idx","id","_c","$RefreshReg$"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Dashboard/components/charts/RoundedChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { ChevronDownIcon } from \"@heroicons/react/20/solid\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst yearOptions = [2022, 2021];\r\nconst RoundedChart = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const userType = useSelector((state) => state.setUserType);\r\n  const userId = useSelector((state) => state.setUserId);\r\n  const [totalAppointments, setTotalAppointments] = useState(0); // Total appointments\r\n\r\n  const [chartOptions, setChartOptions] = useState({\r\n    series: [0, 0, 0], // Initial percentages for Male, Female, Others\r\n    options: {\r\n      chart: {\r\n        height: 400,\r\n        type: \"radialBar\",\r\n      },\r\n      plotOptions: {\r\n        radialBar: {\r\n          dataLabels: {\r\n            name: {\r\n              fontSize: \"22px\",\r\n            },\r\n            value: {\r\n              fontSize: \"16px\",\r\n            },\r\n            total: {\r\n              show: true,\r\n              label: \"Total\",\r\n              formatter: function (w) {\r\n                return totalAppointments; // Display total appointments in the center\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n      labels: [\"Male\", \"Female\", \"Others\"],\r\n    },\r\n  });\r\n\r\n  // Fetch appointments based on userType\r\n  useEffect(() => {\r\n    const fetchAppointments = async () => {\r\n      let apiUrl = \"\";\r\n      if (userType === 1) {\r\n        apiUrl =\r\n          \"https://consultant-backend-jiwv.onrender.com/appointment/all-appointments\";\r\n      } else if (userType === 2) {\r\n        apiUrl = `https://consultant-backend-jiwv.onrender.com/doctor/${userId}/appointments`;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(apiUrl);\r\n        const appointments = response.data.appointments;\r\n\r\n        // Process the gender data\r\n        const genderCounts = { male: 0, female: 0, others: 0 };\r\n        appointments.forEach((appointment) => {\r\n          const gender = appointment.user.gender.toLowerCase();\r\n          if (gender === \"male\") genderCounts.male++;\r\n          else if (gender === \"female\") genderCounts.female++;\r\n          else genderCounts.others++;\r\n        });\r\n\r\n        const total =\r\n          genderCounts.male + genderCounts.female + genderCounts.others;\r\n        setTotalAppointments(total); // Set total appointments\r\n\r\n        const malePercentage = ((genderCounts.male / total) * 100).toFixed(2);\r\n        const femalePercentage = ((genderCounts.female / total) * 100).toFixed(\r\n          2\r\n        );\r\n        const othersPercentage = ((genderCounts.others / total) * 100).toFixed(\r\n          2\r\n        );\r\n\r\n        // Update the chart data\r\n        setChartOptions((prevOptions) => ({\r\n          ...prevOptions,\r\n          series: [malePercentage, femalePercentage, othersPercentage],\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching appointments:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAppointments();\r\n  }, [userType, userId]);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleSelect = (year) => {\r\n    setIsOpen(false);\r\n    // Additional logic for year selection if needed\r\n  };\r\n\r\n  return (\r\n    <div className=\" my-8\">\r\n      <div className=\"flex justify-between mx-3\">\r\n        <h3 className=\" text-lg font-bold items-center justify-center flex\">\r\n          Patients visit by Gender\r\n        </h3>\r\n        <div className=\"custom-dropdown \">\r\n          <div\r\n            role=\"button\"\r\n            onClick={toggleDropdown}\r\n            className=\"px-3 py-2 light-bg-L border border-[#667fd1] head-6 green-H flex items-center gap-2 rounded-lg\"\r\n          >\r\n            <p>Year</p>\r\n            <ChevronDownIcon className=\"w-5 h-5\" />\r\n          </div>\r\n\r\n          {isOpen && (\r\n            <div\r\n              className=\"dropdown-list-container dropdown-end light-bg-L dark-M body-N p-2 shadow rounded-box\"\r\n              style={{ width: \"140px\" }}\r\n            >\r\n              <ul className=\"dropdown-list\">\r\n                {yearOptions?.map((el, idx) => (\r\n                  <li\r\n                    role=\"button\"\r\n                    key={idx}\r\n                    onClick={() => handleSelect(el)}\r\n                    className=\"cursor-pointer hover:bg-gray-200 p-2 rounded\"\r\n                  >\r\n                    {el}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={chartOptions.options}\r\n          series={chartOptions.series}\r\n          type=\"radialBar\"\r\n          height={400}\r\n        />\r\n      </div>\r\n      <div id=\"html-dist\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundedChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAChC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMa,QAAQ,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAC1D,MAAMC,MAAM,GAAGZ,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACG,SAAS,CAAC;EACtD,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC;IAC/CsB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAAE;IACnBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,MAAM,EAAE,GAAG;QACXC,IAAI,EAAE;MACR,CAAC;MACDC,WAAW,EAAE;QACXC,SAAS,EAAE;UACTC,UAAU,EAAE;YACVC,IAAI,EAAE;cACJC,QAAQ,EAAE;YACZ,CAAC;YACDC,KAAK,EAAE;cACLD,QAAQ,EAAE;YACZ,CAAC;YACDE,KAAK,EAAE;cACLC,IAAI,EAAE,IAAI;cACVC,KAAK,EAAE,OAAO;cACdC,SAAS,EAAE,SAAAA,CAAUC,CAAC,EAAE;gBACtB,OAAOnB,iBAAiB,CAAC,CAAC;cAC5B;YACF;UACF;QACF;MACF,CAAC;MACDoB,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ;IACrC;EACF,CAAC,CAAC;;EAEF;EACArC,SAAS,CAAC,MAAM;IACd,MAAMsC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAIC,MAAM,GAAG,EAAE;MACf,IAAI3B,QAAQ,KAAK,CAAC,EAAE;QAClB2B,MAAM,GACJ,2EAA2E;MAC/E,CAAC,MAAM,IAAI3B,QAAQ,KAAK,CAAC,EAAE;QACzB2B,MAAM,GAAG,uDAAuDxB,MAAM,eAAe;MACvF;MAEA,IAAI;QACF,MAAMyB,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAACF,MAAM,CAAC;QACxC,MAAMG,YAAY,GAAGF,QAAQ,CAACG,IAAI,CAACD,YAAY;;QAE/C;QACA,MAAME,YAAY,GAAG;UAAEC,IAAI,EAAE,CAAC;UAAEC,MAAM,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QACtDL,YAAY,CAACM,OAAO,CAAEC,WAAW,IAAK;UACpC,MAAMC,MAAM,GAAGD,WAAW,CAACE,IAAI,CAACD,MAAM,CAACE,WAAW,CAAC,CAAC;UACpD,IAAIF,MAAM,KAAK,MAAM,EAAEN,YAAY,CAACC,IAAI,EAAE,CAAC,KACtC,IAAIK,MAAM,KAAK,QAAQ,EAAEN,YAAY,CAACE,MAAM,EAAE,CAAC,KAC/CF,YAAY,CAACG,MAAM,EAAE;QAC5B,CAAC,CAAC;QAEF,MAAMf,KAAK,GACTY,YAAY,CAACC,IAAI,GAAGD,YAAY,CAACE,MAAM,GAAGF,YAAY,CAACG,MAAM;QAC/D7B,oBAAoB,CAACc,KAAK,CAAC,CAAC,CAAC;;QAE7B,MAAMqB,cAAc,GAAG,CAAET,YAAY,CAACC,IAAI,GAAGb,KAAK,GAAI,GAAG,EAAEsB,OAAO,CAAC,CAAC,CAAC;QACrE,MAAMC,gBAAgB,GAAG,CAAEX,YAAY,CAACE,MAAM,GAAGd,KAAK,GAAI,GAAG,EAAEsB,OAAO,CACpE,CACF,CAAC;QACD,MAAME,gBAAgB,GAAG,CAAEZ,YAAY,CAACG,MAAM,GAAGf,KAAK,GAAI,GAAG,EAAEsB,OAAO,CACpE,CACF,CAAC;;QAED;QACAlC,eAAe,CAAEqC,WAAW,KAAM;UAChC,GAAGA,WAAW;UACdpC,MAAM,EAAE,CAACgC,cAAc,EAAEE,gBAAgB,EAAEC,gBAAgB;QAC7D,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDpB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAAC1B,QAAQ,EAAEG,MAAM,CAAC,CAAC;EAEtB,MAAM6C,cAAc,GAAGA,CAAA,KAAM;IAC3BjD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMmD,YAAY,GAAIC,IAAI,IAAK;IAC7BnD,SAAS,CAAC,KAAK,CAAC;IAChB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKyD,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpB1D,OAAA;MAAKyD,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxC1D,OAAA;QAAIyD,SAAS,EAAC,qDAAqD;QAAAC,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACL9D,OAAA;QAAKyD,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B1D,OAAA;UACE+D,IAAI,EAAC,QAAQ;UACbC,OAAO,EAAEV,cAAe;UACxBG,SAAS,EAAC,gGAAgG;UAAAC,QAAA,gBAE1G1D,OAAA;YAAA0D,QAAA,EAAG;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACX9D,OAAA,CAACJ,eAAe;YAAC6D,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EAEL1D,MAAM,iBACLJ,OAAA;UACEyD,SAAS,EAAC,sFAAsF;UAChGQ,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAQ,CAAE;UAAAR,QAAA,eAE1B1D,OAAA;YAAIyD,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1BzD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkE,GAAG,CAAC,CAACC,EAAE,EAAEC,GAAG,kBACxBrE,OAAA;cACE+D,IAAI,EAAC,QAAQ;cAEbC,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACa,EAAE,CAAE;cAChCX,SAAS,EAAC,8CAA8C;cAAAC,QAAA,EAEvDU;YAAE,GAJEC,GAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN9D,OAAA;MAAKsE,EAAE,EAAC,OAAO;MAAAZ,QAAA,eACb1D,OAAA,CAACL,cAAc;QACbqB,OAAO,EAAEH,YAAY,CAACG,OAAQ;QAC9BD,MAAM,EAAEF,YAAY,CAACE,MAAO;QAC5BI,IAAI,EAAC,WAAW;QAChBD,MAAM,EAAE;MAAI;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9D,OAAA;MAAKsE,EAAE,EAAC;IAAW;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAAC3D,EAAA,CA9IID,YAAY;EAAA,QAECL,WAAW,EACbA,WAAW;AAAA;AAAA0E,EAAA,GAHtBrE,YAAY;AAgJlB,eAAeA,YAAY;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}