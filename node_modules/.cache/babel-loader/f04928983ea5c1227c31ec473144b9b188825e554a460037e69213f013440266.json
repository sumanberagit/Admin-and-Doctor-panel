{"ast":null,"code":"var _jsxFileName = \"C:\\\\Admin-and-doctor-dashboard\\\\dashboard\\\\src\\\\pages\\\\Calandar\\\\CalendarWithTimePicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"tailwindcss/tailwind.css\";\nimport BaseLayout from \"../../layouts/BaseLayout\";\nimport axios from \"axios\"; // Import axios for API calls\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst AttendanceCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [dailyAttendance, setDailyAttendance] = useState([]);\n  const [apLeave, setApLeave] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [startTime, setStartTime] = useState(\"09:00\");\n  const [endTime, setEndTime] = useState(\"17:00\");\n  const [dateTimes, setDateTimes] = useState({});\n  const token = useSelector(state => state.token);\n  const today = new Date();\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const populateMonthDropdown = () => {\n    return monthNames.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: month\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this));\n  };\n  const populateYearDropdown = () => {\n    const currentYear = today.getFullYear();\n    const previousYears = [currentYear - 2, currentYear - 1, currentYear, currentYear + 1, currentYear + 2, currentYear + 3, currentYear + 4, currentYear + 5];\n    return previousYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: year,\n      children: year\n    }, year, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this));\n  };\n  useEffect(() => {\n    const fetchCheckupDates = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/doctor/dates\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.data.success && Array.isArray(response.data.datesAndTimes)) {\n          const fetchedData = {};\n          response.data.datesAndTimes.forEach(item => {\n            const date = new Date(item.date);\n            const adjustedDate = new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n            const dateKey = adjustedDate.toISOString().split(\"T\")[0];\n            const timeRanges = item.timeRanges.map(timeRange => ({\n              startTime: timeRange.startTime,\n              endTime: timeRange.endTime\n            }));\n            const checkupTimes = item.checkupTimes || [];\n            const checkupTimeRanges = (item.checkupTimes || []).map(checkup => ({\n              startTime: checkup.startTime,\n              endTime: checkup.endTime\n            }));\n            fetchedData[dateKey] = [...timeRanges, ...checkupTimeRanges];\n          });\n          setDateTimes(fetchedData);\n        } else {\n          console.error(\"Unexpected response structure\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching dates: \", error);\n      }\n    };\n    fetchCheckupDates();\n  }, [token]);\n  const getAttendanceStatus = (day, month, year) => {\n    return {\n      status: \"Absent\"\n    };\n  };\n  const generateCalendar = (month, year) => {\n    const firstDay = new Date(year, month).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const offset = firstDay === 0 ? 6 : firstDay - 1;\n    const dates = [];\n\n    // Previous month's days\n    for (let i = offset; i > 0; i--) {\n      dates.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/7 bg-gray-200 text-gray-500 py-2 text-center\",\n        children: prevMonthDays - i + 1\n      }, `prev-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Current month's days\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dateKey = `${year}-${(month + 1).toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`; // Format date as YYYY-MM-DD\n\n      const hasTimeRanges = dateTimes[dateKey];\n      const eventClass = hasTimeRanges ? \"bg-green-100 border-l-4 border-green-500\" : \"bg-red-100 border-l-4 border-red-500\"; // Green for dates with times, Red for others\n\n      // Display all time ranges if they exist\n      const timeText = hasTimeRanges ? hasTimeRanges.map(range => `${range.startTime} - ${range.endTime}`).join(\", \") : \"\";\n      dates.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `w-1/7 p-2 text-center h-[100px] flex flex-col justify-center ${eventClass} cursor-pointer`,\n        onClick: () => handleDateClick(day, month, year),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), timeText && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: timeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 24\n        }, this), \" \"]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this));\n    }\n    return dates;\n  };\n  const handleDateClick = (day, month, year) => {\n    setSelectedDate(new Date(year, month, day));\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Function to save selected time range and send to API\n  const handleTimeSave = async () => {\n    if (startTime && endTime && selectedDate) {\n      const currentDate = new Date();\n      if (selectedDate < currentDate) {\n        alert(\"Cannot set time for a past date.\");\n        return;\n      }\n\n      // Create UTC date for start time\n      const [startHour, startMinute] = startTime.split(\":\");\n      const startDateTimeUTC = new Date(Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), startHour, startMinute));\n\n      // Create UTC date for end time\n      const [endHour, endMinute] = endTime.split(\":\");\n      const endDateTimeUTC = new Date(Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate(), endHour, endMinute));\n\n      // Format the payload\n      const payload = {\n        date: startDateTimeUTC.toISOString().split(\"T\")[0],\n        // Date in UTC format\n        timeRanges: [{\n          startTime: startDateTimeUTC.toISOString().split(\"T\")[1].substring(0, 5),\n          // HH:mm\n          endTime: endDateTimeUTC.toISOString().split(\"T\")[1].substring(0, 5) // HH:mm\n        }]\n      };\n      try {\n        const response = await axios.post(\"http://localhost:8080/doctor/set-checkup-times\", payload, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"API response: \", response.data);\n\n        // Replace the existing time range for the selected date\n        const dateKey = startDateTimeUTC.toISOString().split(\"T\")[0]; // Date key in YYYY-MM-DD format\n        setDateTimes(prev => ({\n          ...prev,\n          [dateKey]: [{\n            startTime: payload.timeRanges[0].startTime,\n            endTime: payload.timeRanges[0].endTime\n          }] // Replace existing ranges\n        }));\n        setIsModalOpen(false); // Close modal after saving\n        // Reset times after saving\n        setStartTime(\"09:00\");\n        setEndTime(\"17:00\");\n      } catch (error) {\n        var _error$response;\n        console.error(\"Error setting checkup time: \", error.response ? error.response.data : error);\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || \"Failed to save checkup time. Please try again.\");\n      }\n    } else {\n      alert(\"Please select both start and end time\");\n    }\n  };\n  useEffect(() => {\n    setDailyAttendance([]);\n    setApLeave([]);\n  }, []);\n  const handleMonthChange = e => {\n    setCurrentDate(new Date(currentDate.getFullYear(), parseInt(e.target.value), 1));\n  };\n  const handleYearChange = e => {\n    setCurrentDate(new Date(parseInt(e.target.value), currentDate.getMonth(), 1));\n  };\n  return /*#__PURE__*/_jsxDEV(BaseLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full p-4 bg-white rounded-lg shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-between\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Attendance Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Month: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currentDate.getMonth(),\n            onChange: handleMonthChange,\n            className: \"border rounded p-1\",\n            children: populateMonthDropdown()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Year: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currentDate.getFullYear(),\n            onChange: handleYearChange,\n            className: \"border rounded p-1\",\n            children: populateYearDropdown()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-7 gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center font-semibold\",\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), generateCalendar(currentDate.getMonth(), currentDate.getFullYear())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onRequestClose: closeModal,\n        contentLabel: \"Time Selection Modal\",\n        className: \"Modal bg-white w-[400px] rounded-lg shadow-lg p-6\",\n        overlayClassName: \"Overlay bg-black bg-opacity-50 fixed inset-0 flex justify-center items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Set Checkup Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: startTime,\n            onChange: e => setStartTime(e.target.value),\n            className: \"border rounded p-1 ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: endTime,\n            onChange: e => setEndTime(e.target.value),\n            className: \"border rounded p-1 ml-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTimeSave,\n            className: \"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"bg-gray-500 text-white py-2 px-4 rounded ml-2 hover:bg-gray-600\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceCalendar, \"KC4jniyDObkGukpjod5QOjBghjs=\", false, function () {\n  return [useSelector];\n});\n_c = AttendanceCalendar;\nexport default AttendanceCalendar;\nvar _c;\n$RefreshReg$(_c, \"AttendanceCalendar\");","map":{"version":3,"names":["React","useState","useEffect","Modal","BaseLayout","axios","useSelector","jsxDEV","_jsxDEV","setAppElement","AttendanceCalendar","_s","currentDate","setCurrentDate","Date","dailyAttendance","setDailyAttendance","apLeave","setApLeave","selectedDate","setSelectedDate","isModalOpen","setIsModalOpen","startTime","setStartTime","endTime","setEndTime","dateTimes","setDateTimes","token","state","today","monthNames","populateMonthDropdown","map","month","index","value","children","fileName","_jsxFileName","lineNumber","columnNumber","populateYearDropdown","currentYear","getFullYear","previousYears","year","fetchCheckupDates","response","get","headers","Authorization","data","success","Array","isArray","datesAndTimes","fetchedData","forEach","item","date","adjustedDate","getTime","getTimezoneOffset","dateKey","toISOString","split","timeRanges","timeRange","checkupTimes","checkupTimeRanges","checkup","console","error","getAttendanceStatus","day","status","generateCalendar","firstDay","getDay","daysInMonth","getDate","prevMonthDays","offset","dates","i","push","className","toString","padStart","hasTimeRanges","eventClass","timeText","range","join","onClick","handleDateClick","closeModal","handleTimeSave","alert","startHour","startMinute","startDateTimeUTC","UTC","getMonth","endHour","endMinute","endDateTimeUTC","payload","substring","post","log","prev","_error$response","message","handleMonthChange","e","parseInt","target","handleYearChange","onChange","isOpen","onRequestClose","contentLabel","overlayClassName","type","_c","$RefreshReg$"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Calandar/CalendarWithTimePicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport BaseLayout from \"../../layouts/BaseLayout\";\r\nimport axios from \"axios\"; // Import axios for API calls\r\nimport { useSelector } from \"react-redux\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst AttendanceCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [dailyAttendance, setDailyAttendance] = useState([]);\r\n  const [apLeave, setApLeave] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [startTime, setStartTime] = useState(\"09:00\");\r\n  const [endTime, setEndTime] = useState(\"17:00\");\r\n  const [dateTimes, setDateTimes] = useState({});\r\n\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const today = new Date();\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const populateMonthDropdown = () => {\r\n    return monthNames.map((month, index) => (\r\n      <option key={index} value={index}>\r\n        {month}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const populateYearDropdown = () => {\r\n    const currentYear = today.getFullYear();\r\n    const previousYears = [\r\n      currentYear - 2,\r\n      currentYear - 1,\r\n      currentYear,\r\n      currentYear + 1,\r\n      currentYear + 2,\r\n      currentYear + 3,\r\n      currentYear + 4,\r\n      currentYear + 5,\r\n    ];\r\n    return previousYears.map((year) => (\r\n      <option key={year} value={year}>\r\n        {year}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCheckupDates = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/doctor/dates\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        if (\r\n          response.data.success &&\r\n          Array.isArray(response.data.datesAndTimes)\r\n        ) {\r\n          const fetchedData = {};\r\n\r\n          response.data.datesAndTimes.forEach((item) => {\r\n            const date = new Date(item.date);\r\n            const adjustedDate = new Date(\r\n              date.getTime() - date.getTimezoneOffset() * 60000\r\n            );\r\n            const dateKey = adjustedDate.toISOString().split(\"T\")[0];\r\n\r\n            const timeRanges = item.timeRanges.map((timeRange) => ({\r\n              startTime: timeRange.startTime,\r\n              endTime: timeRange.endTime,\r\n            }));\r\n\r\n            const checkupTimes = item.checkupTimes || [];\r\n            const checkupTimeRanges = (item.checkupTimes || []).map(\r\n              (checkup) => ({\r\n                startTime: checkup.startTime,\r\n                endTime: checkup.endTime,\r\n              })\r\n            );\r\n            fetchedData[dateKey] = [...timeRanges, ...checkupTimeRanges];\r\n          });\r\n\r\n          setDateTimes(fetchedData);\r\n        } else {\r\n          console.error(\"Unexpected response structure\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching dates: \", error);\r\n      }\r\n    };\r\n\r\n    fetchCheckupDates();\r\n  }, [token]);\r\n\r\n  const getAttendanceStatus = (day, month, year) => {\r\n    return { status: \"Absent\" };\r\n  };\r\n\r\n  const generateCalendar = (month, year) => {\r\n    const firstDay = new Date(year, month).getDay();\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const prevMonthDays = new Date(year, month, 0).getDate();\r\n\r\n    const offset = firstDay === 0 ? 6 : firstDay - 1;\r\n    const dates = [];\r\n\r\n    // Previous month's days\r\n    for (let i = offset; i > 0; i--) {\r\n      dates.push(\r\n        <div\r\n          key={`prev-${i}`}\r\n          className=\"w-1/7 bg-gray-200 text-gray-500 py-2 text-center\"\r\n        >\r\n          {prevMonthDays - i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Current month's days\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const dateKey = `${year}-${(month + 1).toString().padStart(2, \"0\")}-${day\r\n        .toString()\r\n        .padStart(2, \"0\")}`; // Format date as YYYY-MM-DD\r\n\r\n      const hasTimeRanges = dateTimes[dateKey];\r\n\r\n      const eventClass = hasTimeRanges\r\n        ? \"bg-green-100 border-l-4 border-green-500\"\r\n        : \"bg-red-100 border-l-4 border-red-500\"; // Green for dates with times, Red for others\r\n\r\n      // Display all time ranges if they exist\r\n      const timeText = hasTimeRanges\r\n        ? hasTimeRanges\r\n            .map((range) => `${range.startTime} - ${range.endTime}`)\r\n            .join(\", \")\r\n        : \"\";\r\n\r\n      dates.push(\r\n        <div\r\n          key={day}\r\n          className={`w-1/7 p-2 text-center h-[100px] flex flex-col justify-center ${eventClass} cursor-pointer`}\r\n          onClick={() => handleDateClick(day, month, year)}\r\n        >\r\n          <div>{day}</div>\r\n          {timeText && <div className=\"text-sm\">{timeText}</div>}{\" \"}\r\n          {/* Display time ranges */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const handleDateClick = (day, month, year) => {\r\n    setSelectedDate(new Date(year, month, day));\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Function to save selected time range and send to API\r\n  const handleTimeSave = async () => {\r\n    if (startTime && endTime && selectedDate) {\r\n      const currentDate = new Date();\r\n      if (selectedDate < currentDate) {\r\n        alert(\"Cannot set time for a past date.\");\r\n        return;\r\n      }\r\n\r\n      // Create UTC date for start time\r\n      const [startHour, startMinute] = startTime.split(\":\");\r\n      const startDateTimeUTC = new Date(\r\n        Date.UTC(\r\n          selectedDate.getFullYear(),\r\n          selectedDate.getMonth(),\r\n          selectedDate.getDate(),\r\n          startHour,\r\n          startMinute\r\n        )\r\n      );\r\n\r\n      // Create UTC date for end time\r\n      const [endHour, endMinute] = endTime.split(\":\");\r\n      const endDateTimeUTC = new Date(\r\n        Date.UTC(\r\n          selectedDate.getFullYear(),\r\n          selectedDate.getMonth(),\r\n          selectedDate.getDate(),\r\n          endHour,\r\n          endMinute\r\n        )\r\n      );\r\n\r\n      // Format the payload\r\n      const payload = {\r\n        date: startDateTimeUTC.toISOString().split(\"T\")[0], // Date in UTC format\r\n        timeRanges: [\r\n          {\r\n            startTime: startDateTimeUTC\r\n              .toISOString()\r\n              .split(\"T\")[1]\r\n              .substring(0, 5), // HH:mm\r\n            endTime: endDateTimeUTC.toISOString().split(\"T\")[1].substring(0, 5), // HH:mm\r\n          },\r\n        ],\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:8080/doctor/set-checkup-times\",\r\n          payload,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"API response: \", response.data);\r\n\r\n        // Replace the existing time range for the selected date\r\n        const dateKey = startDateTimeUTC.toISOString().split(\"T\")[0]; // Date key in YYYY-MM-DD format\r\n        setDateTimes((prev) => ({\r\n          ...prev,\r\n          [dateKey]: [\r\n            {\r\n              startTime: payload.timeRanges[0].startTime,\r\n              endTime: payload.timeRanges[0].endTime,\r\n            },\r\n          ], // Replace existing ranges\r\n        }));\r\n\r\n        setIsModalOpen(false); // Close modal after saving\r\n        // Reset times after saving\r\n        setStartTime(\"09:00\");\r\n        setEndTime(\"17:00\");\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error setting checkup time: \",\r\n          error.response ? error.response.data : error\r\n        );\r\n        alert(\r\n          error.response?.data.message ||\r\n            \"Failed to save checkup time. Please try again.\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Please select both start and end time\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDailyAttendance([]);\r\n    setApLeave([]);\r\n  }, []);\r\n\r\n  const handleMonthChange = (e) => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), parseInt(e.target.value), 1)\r\n    );\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    setCurrentDate(\r\n      new Date(parseInt(e.target.value), currentDate.getMonth(), 1)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"w-full p-4 bg-white rounded-lg shadow\">\r\n        <div className=\"flex flex-row justify-between\">\r\n          <h2 className=\"text-lg font-semibold mb-4\">Attendance Calendar</h2>\r\n        </div>\r\n\r\n        <div className=\"flex flex-row items-center mb-4\">\r\n          <div className=\"mr-4\">\r\n            <label>Month: </label>\r\n            <select\r\n              value={currentDate.getMonth()}\r\n              onChange={handleMonthChange}\r\n              className=\"border rounded p-1\"\r\n            >\r\n              {populateMonthDropdown()}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label>Year: </label>\r\n            <select\r\n              value={currentDate.getFullYear()}\r\n              onChange={handleYearChange}\r\n              className=\"border rounded p-1\"\r\n            >\r\n              {populateYearDropdown()}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-7 gap-2\">\r\n          <div className=\"text-center font-semibold\">Mon</div>\r\n          <div className=\"text-center font-semibold\">Tue</div>\r\n          <div className=\"text-center font-semibold\">Wed</div>\r\n          <div className=\"text-center font-semibold\">Thu</div>\r\n          <div className=\"text-center font-semibold\">Fri</div>\r\n          <div className=\"text-center font-semibold\">Sat</div>\r\n          <div className=\"text-center font-semibold\">Sun</div>\r\n\r\n          {generateCalendar(currentDate.getMonth(), currentDate.getFullYear())}\r\n        </div>\r\n\r\n        {/* Modal for setting checkup times */}\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onRequestClose={closeModal}\r\n          contentLabel=\"Time Selection Modal\"\r\n          className=\"Modal bg-white w-[400px] rounded-lg shadow-lg p-6\"\r\n          overlayClassName=\"Overlay bg-black bg-opacity-50 fixed inset-0 flex justify-center items-center\"\r\n        >\r\n          <h2 className=\"text-lg font-semibold mb-4\">Set Checkup Time</h2>\r\n          <div className=\"mb-4\">\r\n            <label>Start Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              value={startTime}\r\n              onChange={(e) => setStartTime(e.target.value)}\r\n              className=\"border rounded p-1 ml-2\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-4\">\r\n            <label>End Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              value={endTime}\r\n              onChange={(e) => setEndTime(e.target.value)}\r\n              className=\"border rounded p-1 ml-2\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              onClick={handleTimeSave}\r\n              className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              onClick={closeModal}\r\n              className=\"bg-gray-500 text-white py-2 px-4 rounded ml-2 hover:bg-gray-600\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default AttendanceCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}