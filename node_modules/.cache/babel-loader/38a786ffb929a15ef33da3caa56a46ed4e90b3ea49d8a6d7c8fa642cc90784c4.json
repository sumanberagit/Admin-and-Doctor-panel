{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Modal from\"react-modal\";import\"tailwindcss/tailwind.css\";import BaseLayout from\"../../layouts/BaseLayout\";import axios from\"axios\";// Import axios for API calls\nimport{useSelector}from\"react-redux\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement(\"#root\");const AttendanceCalendar=()=>{const[currentDate,setCurrentDate]=useState(new Date());const[dailyAttendance,setDailyAttendance]=useState([]);const[apLeave,setApLeave]=useState([]);const[selectedDate,setSelectedDate]=useState(null);const[isModalOpen,setIsModalOpen]=useState(false);const[startTime,setStartTime]=useState(\"09:00\");const[endTime,setEndTime]=useState(\"17:00\");const[timeRanges,setTimeRanges]=useState({});const[dateTimes,setDateTimes]=useState({});const token=useSelector(state=>state.token);const today=new Date();const monthNames=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];const populateMonthDropdown=()=>{return monthNames.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index));};const populateYearDropdown=()=>{const currentYear=today.getFullYear();const previousYears=[currentYear-2,currentYear-1,currentYear,currentYear+1,currentYear+2,currentYear+3,currentYear+4,currentYear+5];return previousYears.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year));};useEffect(()=>{const fetchCheckupDates=async()=>{try{const response=await axios.get(\"https://consultant-backend-jiwv.onrender.com/doctor/dates\",{headers:{Authorization:`Bearer ${token}`}});if(response.data.success&&Array.isArray(response.data.datesAndTimes)){const fetchedData={};response.data.datesAndTimes.forEach(item=>{const date=new Date(item.date);const adjustedDate=new Date(date.getTime()-date.getTimezoneOffset()*60000);const dateKey=adjustedDate.toISOString().split(\"T\")[0];const timeRanges=item.timeRanges.map(timeRange=>({startTime:timeRange.startTime,endTime:timeRange.endTime}));const checkupTimes=item.checkupTimes||[];const checkupTimeRanges=(item.checkupTimes||[]).map(checkup=>({startTime:checkup.startTime,endTime:checkup.endTime}));fetchedData[dateKey]=[...timeRanges,...checkupTimeRanges];});setDateTimes(fetchedData);// Log the start and end times to check if the data is coming\nObject.keys(fetchedData).forEach(date=>{console.log(\"date\",date);fetchedData[date].forEach(timeSlot=>{console.log(\"Start Time:\",timeSlot.startTime);console.log(\"End Time:\",timeSlot.endTime);const endDate=console.log();// Set start and end times in state\nsetStartTime(timeSlot.startTime);setEndTime(timeSlot.endTime);});});}else{console.error(\"Unexpected response structure\");}}catch(error){console.error(\"Error fetching dates: \",error);}};fetchCheckupDates();},[token]);// Use another useEffect to log when the state changes\nuseEffect(()=>{console.log(\"Updated Start Time:\",startTime);console.log(\"Updated End Time:\",endTime);},[startTime,endTime]);const getAttendanceStatus=(day,month,year)=>{return{status:\"Absent\"};};const generateCalendar=(month,year)=>{const firstDay=new Date(year,month).getDay();const daysInMonth=new Date(year,month+1,0).getDate();const prevMonthDays=new Date(year,month,0).getDate();const offset=firstDay===0?6:firstDay-1;const dates=[];// Previous month's days\nfor(let i=offset;i>0;i--){dates.push(/*#__PURE__*/_jsx(\"div\",{className:\"w-1/7 bg-gray-200 text-gray-500 py-2 text-center\",children:prevMonthDays-i+1},`prev-${i}`));}// Current month's days\nfor(let day=1;day<=daysInMonth;day++){const dateKey=`${year}-${(month+1).toString().padStart(2,\"0\")}-${day.toString().padStart(2,\"0\")}`;// Format date as YYYY-MM-DD\nconst hasTimeRanges=dateTimes[dateKey];const eventClass=hasTimeRanges?\"bg-green-100 border-l-4 border-green-500\":\"bg-red-100 border-l-4 border-red-500\";// Green for dates with times, Red for others\n// Display all time ranges if they exist\nconst timeText=hasTimeRanges?hasTimeRanges.map(range=>`${range.startTime} - ${range.endTime}`).join(\", \"):\"\";dates.push(/*#__PURE__*/_jsxs(\"div\",{className:`w-1/7 p-2 text-center h-[100px] flex flex-col justify-center ${eventClass} cursor-pointer`,onClick:()=>handleDateClick(day,month,year),children:[/*#__PURE__*/_jsx(\"div\",{children:day}),timeText&&/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:timeText}),\" \"]},day));}return dates;};const handleDateClick=(day,month,year)=>{setSelectedDate(new Date(year,month,day));setIsModalOpen(true);};const closeModal=()=>{setIsModalOpen(false);};// Function to save selected time range and send to API\n// Function to save selected time range and send to API\n// Function to save selected time range and send to API\nconst handleTimeSave=async()=>{if(startTime&&endTime&&selectedDate){const currentDate=new Date();if(selectedDate<currentDate){alert(\"Cannot set time for a past date.\");return;}// Create UTC date for start time\nconst[startHour,startMinute]=startTime.split(\":\");const startDateTimeUTC=new Date(Date.UTC(selectedDate.getFullYear(),selectedDate.getMonth(),selectedDate.getDate(),startHour,startMinute));// Create UTC date for end time\nconst[endHour,endMinute]=endTime.split(\":\");const endDateTimeUTC=new Date(Date.UTC(selectedDate.getFullYear(),selectedDate.getMonth(),selectedDate.getDate(),endHour,endMinute));// Format the payload\nconst payload={date:startDateTimeUTC.toISOString().split(\"T\")[0],// Date in UTC format\ntimeRanges:[{startTime:startDateTimeUTC.toISOString().split(\"T\")[1].substring(0,5),// HH:mm\nendTime:endDateTimeUTC.toISOString().split(\"T\")[1].substring(0,5)// HH:mm\n}]};try{const response=await axios.post(\"https://consultant-backend-jiwv.onrender.com/doctor/set-checkup-times\",payload,{headers:{Authorization:`Bearer ${token}`}});console.log(\"API response: \",response.data);// Replace the existing time range for the selected date\nconst dateKey=startDateTimeUTC.toISOString().split(\"T\")[0];// Date key in YYYY-MM-DD format\nsetDateTimes(prev=>({...prev,[dateKey]:[{startTime:payload.timeRanges[0].startTime,endTime:payload.timeRanges[0].endTime}]// Replace existing ranges\n}));setIsModalOpen(false);// Close modal after saving\n// Reset times after saving\nsetStartTime(\"09:00\");setEndTime(\"17:00\");}catch(error){var _error$response;console.error(\"Error setting checkup time: \",error.response?error.response.data:error);alert(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data.message)||\"Failed to save checkup time. Please try again.\");}}else{alert(\"Please select both start and end time\");}};useEffect(()=>{setDailyAttendance([]);setApLeave([]);},[]);const handleMonthChange=e=>{setCurrentDate(new Date(currentDate.getFullYear(),parseInt(e.target.value),1));};const handleYearChange=e=>{setCurrentDate(new Date(parseInt(e.target.value),currentDate.getMonth(),1));};return/*#__PURE__*/_jsx(BaseLayout,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full p-4 bg-white rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold\",children:\"Set Future Check-Up Time\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"text-lg\",onClick:()=>setCurrentDate(new Date(currentDate.getFullYear(),currentDate.getMonth()-1,1)),children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"button\",{className:\"text-lg ml-2\",onClick:()=>setCurrentDate(new Date(currentDate.getFullYear(),currentDate.getMonth()+1,1)),children:\"\\u2192\"}),/*#__PURE__*/_jsx(\"select\",{className:\"ml-4 border-none\",value:currentDate.getMonth(),onChange:handleMonthChange,children:populateMonthDropdown()}),/*#__PURE__*/_jsx(\"select\",{className:\"ml-2 border-none\",value:currentDate.getFullYear(),onChange:handleYearChange,children:populateYearDropdown()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-7 gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Mon\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Tue\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Wed\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Thu\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Fri\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Sat\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center bg-gray-800 text-white py-2\",children:\"Sun\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-7 gap-4 mt-4 \",children:generateCalendar(currentDate.getMonth(),currentDate.getFullYear())}),/*#__PURE__*/_jsxs(Modal,{isOpen:isModalOpen,onRequestClose:closeModal,className:\"bg-white p-6 rounded-lg max-w-md mx-auto my-20\",overlayClassName:\"bg-gray-500 bg-opacity-75 fixed inset-0\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold mb-4\",children:\"Select Time Range\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2 text-sm font-medium\",children:\"Start Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:startTime,onChange:e=>setStartTime(e.target.value),className:\"w-full px-4 py-2 border rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block mb-2 text-sm font-medium\",children:\"End Time:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:endTime,onChange:e=>setEndTime(e.target.value),className:\"w-full px-4 py-2 border rounded-md\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleTimeSave,className:\"px-6 py-2 bg-blue-500 text-white rounded-lg mr-2\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeModal,className:\"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg\",children:\"Cancel\"})]})]})]})});};export default AttendanceCalendar;","map":{"version":3,"names":["React","useState","useEffect","Modal","BaseLayout","axios","useSelector","jsx","_jsx","jsxs","_jsxs","setAppElement","AttendanceCalendar","currentDate","setCurrentDate","Date","dailyAttendance","setDailyAttendance","apLeave","setApLeave","selectedDate","setSelectedDate","isModalOpen","setIsModalOpen","startTime","setStartTime","endTime","setEndTime","timeRanges","setTimeRanges","dateTimes","setDateTimes","token","state","today","monthNames","populateMonthDropdown","map","month","index","value","children","populateYearDropdown","currentYear","getFullYear","previousYears","year","fetchCheckupDates","response","get","headers","Authorization","data","success","Array","isArray","datesAndTimes","fetchedData","forEach","item","date","adjustedDate","getTime","getTimezoneOffset","dateKey","toISOString","split","timeRange","checkupTimes","checkupTimeRanges","checkup","Object","keys","console","log","timeSlot","endDate","error","getAttendanceStatus","day","status","generateCalendar","firstDay","getDay","daysInMonth","getDate","prevMonthDays","offset","dates","i","push","className","toString","padStart","hasTimeRanges","eventClass","timeText","range","join","onClick","handleDateClick","closeModal","handleTimeSave","alert","startHour","startMinute","startDateTimeUTC","UTC","getMonth","endHour","endMinute","endDateTimeUTC","payload","substring","post","prev","_error$response","message","handleMonthChange","e","parseInt","target","handleYearChange","onChange","isOpen","onRequestClose","overlayClassName","type"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Calandar/CalendarWithTimePicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport BaseLayout from \"../../layouts/BaseLayout\";\r\nimport axios from \"axios\"; // Import axios for API calls\r\nimport { useSelector } from \"react-redux\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst AttendanceCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [dailyAttendance, setDailyAttendance] = useState([]);\r\n  const [apLeave, setApLeave] = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [startTime, setStartTime] = useState(\"09:00\");\r\n  const [endTime, setEndTime] = useState(\"17:00\");\r\n  const [timeRanges, setTimeRanges] = useState({});\r\n  const [dateTimes, setDateTimes] = useState({});\r\n\r\n  const token = useSelector((state) => state.token);\r\n\r\n  const today = new Date();\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const populateMonthDropdown = () => {\r\n    return monthNames.map((month, index) => (\r\n      <option key={index} value={index}>\r\n        {month}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const populateYearDropdown = () => {\r\n    const currentYear = today.getFullYear();\r\n    const previousYears = [\r\n      currentYear - 2,\r\n      currentYear - 1,\r\n      currentYear,\r\n      currentYear + 1,\r\n      currentYear + 2,\r\n      currentYear + 3,\r\n      currentYear + 4,\r\n      currentYear + 5,\r\n    ];\r\n    return previousYears.map((year) => (\r\n      <option key={year} value={year}>\r\n        {year}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCheckupDates = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://consultant-backend-jiwv.onrender.com/doctor/dates\",\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (\r\n          response.data.success &&\r\n          Array.isArray(response.data.datesAndTimes)\r\n        ) {\r\n          const fetchedData = {};\r\n\r\n          response.data.datesAndTimes.forEach((item) => {\r\n            const date = new Date(item.date);\r\n            const adjustedDate = new Date(\r\n              date.getTime() - date.getTimezoneOffset() * 60000\r\n            );\r\n            const dateKey = adjustedDate.toISOString().split(\"T\")[0];\r\n\r\n            const timeRanges = item.timeRanges.map((timeRange) => ({\r\n              startTime: timeRange.startTime,\r\n              endTime: timeRange.endTime,\r\n            }));\r\n\r\n            const checkupTimes = item.checkupTimes || [];\r\n            const checkupTimeRanges = (item.checkupTimes || []).map(\r\n              (checkup) => ({\r\n                startTime: checkup.startTime,\r\n                endTime: checkup.endTime,\r\n              })\r\n            );\r\n            fetchedData[dateKey] = [...timeRanges, ...checkupTimeRanges];\r\n          });\r\n\r\n          setDateTimes(fetchedData);\r\n\r\n          // Log the start and end times to check if the data is coming\r\n          Object.keys(fetchedData).forEach((date) => {\r\n            console.log(\"date\", date);\r\n\r\n            fetchedData[date].forEach((timeSlot) => {\r\n              console.log(\"Start Time:\", timeSlot.startTime);\r\n              console.log(\"End Time:\", timeSlot.endTime);\r\n              const endDate = console.log();\r\n              // Set start and end times in state\r\n              setStartTime(timeSlot.startTime);\r\n              setEndTime(timeSlot.endTime);\r\n            });\r\n          });\r\n        } else {\r\n          console.error(\"Unexpected response structure\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching dates: \", error);\r\n      }\r\n    };\r\n\r\n    fetchCheckupDates();\r\n  }, [token]);\r\n\r\n  // Use another useEffect to log when the state changes\r\n  useEffect(() => {\r\n    console.log(\"Updated Start Time:\", startTime);\r\n    console.log(\"Updated End Time:\", endTime);\r\n  }, [startTime, endTime]);\r\n\r\n  const getAttendanceStatus = (day, month, year) => {\r\n    return { status: \"Absent\" };\r\n  };\r\n\r\n  const generateCalendar = (month, year) => {\r\n    const firstDay = new Date(year, month).getDay();\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const prevMonthDays = new Date(year, month, 0).getDate();\r\n\r\n    const offset = firstDay === 0 ? 6 : firstDay - 1;\r\n    const dates = [];\r\n\r\n    // Previous month's days\r\n    for (let i = offset; i > 0; i--) {\r\n      dates.push(\r\n        <div\r\n          key={`prev-${i}`}\r\n          className=\"w-1/7 bg-gray-200 text-gray-500 py-2 text-center\"\r\n        >\r\n          {prevMonthDays - i + 1}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Current month's days\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      const dateKey = `${year}-${(month + 1).toString().padStart(2, \"0\")}-${day\r\n        .toString()\r\n        .padStart(2, \"0\")}`; // Format date as YYYY-MM-DD\r\n\r\n      const hasTimeRanges = dateTimes[dateKey];\r\n\r\n      const eventClass = hasTimeRanges\r\n        ? \"bg-green-100 border-l-4 border-green-500\"\r\n        : \"bg-red-100 border-l-4 border-red-500\"; // Green for dates with times, Red for others\r\n\r\n      // Display all time ranges if they exist\r\n      const timeText = hasTimeRanges\r\n        ? hasTimeRanges\r\n            .map((range) => `${range.startTime} - ${range.endTime}`)\r\n            .join(\", \")\r\n        : \"\";\r\n\r\n      dates.push(\r\n        <div\r\n          key={day}\r\n          className={`w-1/7 p-2 text-center h-[100px] flex flex-col justify-center ${eventClass} cursor-pointer`}\r\n          onClick={() => handleDateClick(day, month, year)}\r\n        >\r\n          <div>{day}</div>\r\n          {timeText && <div className=\"text-sm\">{timeText}</div>}{\" \"}\r\n          {/* Display time ranges */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const handleDateClick = (day, month, year) => {\r\n    setSelectedDate(new Date(year, month, day));\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  // Function to save selected time range and send to API\r\n  // Function to save selected time range and send to API\r\n  // Function to save selected time range and send to API\r\n  const handleTimeSave = async () => {\r\n    if (startTime && endTime && selectedDate) {\r\n      const currentDate = new Date();\r\n      if (selectedDate < currentDate) {\r\n        alert(\"Cannot set time for a past date.\");\r\n        return;\r\n      }\r\n\r\n      // Create UTC date for start time\r\n      const [startHour, startMinute] = startTime.split(\":\");\r\n      const startDateTimeUTC = new Date(\r\n        Date.UTC(\r\n          selectedDate.getFullYear(),\r\n          selectedDate.getMonth(),\r\n          selectedDate.getDate(),\r\n          startHour,\r\n          startMinute\r\n        )\r\n      );\r\n\r\n      // Create UTC date for end time\r\n      const [endHour, endMinute] = endTime.split(\":\");\r\n      const endDateTimeUTC = new Date(\r\n        Date.UTC(\r\n          selectedDate.getFullYear(),\r\n          selectedDate.getMonth(),\r\n          selectedDate.getDate(),\r\n          endHour,\r\n          endMinute\r\n        )\r\n      );\r\n\r\n      // Format the payload\r\n      const payload = {\r\n        date: startDateTimeUTC.toISOString().split(\"T\")[0], // Date in UTC format\r\n        timeRanges: [\r\n          {\r\n            startTime: startDateTimeUTC\r\n              .toISOString()\r\n              .split(\"T\")[1]\r\n              .substring(0, 5), // HH:mm\r\n            endTime: endDateTimeUTC.toISOString().split(\"T\")[1].substring(0, 5), // HH:mm\r\n          },\r\n        ],\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(\r\n          \"https://consultant-backend-jiwv.onrender.com/doctor/set-checkup-times\",\r\n          payload,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n        console.log(\"API response: \", response.data);\r\n\r\n        // Replace the existing time range for the selected date\r\n        const dateKey = startDateTimeUTC.toISOString().split(\"T\")[0]; // Date key in YYYY-MM-DD format\r\n        setDateTimes((prev) => ({\r\n          ...prev,\r\n          [dateKey]: [\r\n            {\r\n              startTime: payload.timeRanges[0].startTime,\r\n              endTime: payload.timeRanges[0].endTime,\r\n            },\r\n          ], // Replace existing ranges\r\n        }));\r\n\r\n        setIsModalOpen(false); // Close modal after saving\r\n        // Reset times after saving\r\n        setStartTime(\"09:00\");\r\n        setEndTime(\"17:00\");\r\n      } catch (error) {\r\n        console.error(\r\n          \"Error setting checkup time: \",\r\n          error.response ? error.response.data : error\r\n        );\r\n        alert(\r\n          error.response?.data.message ||\r\n            \"Failed to save checkup time. Please try again.\"\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"Please select both start and end time\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDailyAttendance([]);\r\n    setApLeave([]);\r\n  }, []);\r\n\r\n  const handleMonthChange = (e) => {\r\n    setCurrentDate(\r\n      new Date(currentDate.getFullYear(), parseInt(e.target.value), 1)\r\n    );\r\n  };\r\n\r\n  const handleYearChange = (e) => {\r\n    setCurrentDate(\r\n      new Date(parseInt(e.target.value), currentDate.getMonth(), 1)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <BaseLayout>\r\n      <div className=\"w-full p-4 bg-white rounded-lg shadow\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-lg font-semibold\">Set Future Check-Up Time</h3>\r\n          <div className=\"flex items-center\">\r\n            <button\r\n              className=\"text-lg\"\r\n              onClick={() =>\r\n                setCurrentDate(\r\n                  new Date(\r\n                    currentDate.getFullYear(),\r\n                    currentDate.getMonth() - 1,\r\n                    1\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              &larr;\r\n            </button>\r\n            <button\r\n              className=\"text-lg ml-2\"\r\n              onClick={() =>\r\n                setCurrentDate(\r\n                  new Date(\r\n                    currentDate.getFullYear(),\r\n                    currentDate.getMonth() + 1,\r\n                    1\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              &rarr;\r\n            </button>\r\n            <select\r\n              className=\"ml-4 border-none\"\r\n              value={currentDate.getMonth()}\r\n              onChange={handleMonthChange}\r\n            >\r\n              {populateMonthDropdown()}\r\n            </select>\r\n            <select\r\n              className=\"ml-2 border-none\"\r\n              value={currentDate.getFullYear()}\r\n              onChange={handleYearChange}\r\n            >\r\n              {populateYearDropdown()}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-7 gap-4\">\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Mon</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Tue</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Wed</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Thu</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Fri</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Sat</div>\r\n          <div className=\"text-center bg-gray-800 text-white py-2\">Sun</div>\r\n        </div>\r\n        <div className=\"grid grid-cols-7 gap-4 mt-4 \">\r\n          {generateCalendar(currentDate.getMonth(), currentDate.getFullYear())}\r\n        </div>\r\n\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onRequestClose={closeModal}\r\n          className=\"bg-white p-6 rounded-lg max-w-md mx-auto my-20\"\r\n          overlayClassName=\"bg-gray-500 bg-opacity-75 fixed inset-0\"\r\n        >\r\n          <h2 className=\"text-2xl font-semibold mb-4\">Select Time Range</h2>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block mb-2 text-sm font-medium\">\r\n              Start Time:\r\n            </label>\r\n            <input\r\n              type=\"time\"\r\n              value={startTime}\r\n              onChange={(e) => setStartTime(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label className=\"block mb-2 text-sm font-medium\">End Time:</label>\r\n            <input\r\n              type=\"time\"\r\n              value={endTime}\r\n              onChange={(e) => setEndTime(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <button\r\n              onClick={handleTimeSave}\r\n              className=\"px-6 py-2 bg-blue-500 text-white rounded-lg mr-2\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              onClick={closeModal}\r\n              className=\"px-6 py-2 bg-gray-300 text-gray-700 rounded-lg\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default AttendanceCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}