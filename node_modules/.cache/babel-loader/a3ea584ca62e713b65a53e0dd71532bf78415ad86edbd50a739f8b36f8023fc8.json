{"ast":null,"code":"var _jsxFileName = \"C:\\\\Admin-and-doctor-dashboard\\\\dashboard\\\\src\\\\pages\\\\Dashboard\\\\components\\\\charts\\\\BarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/react';\nimport { ChevronDownIcon } from '@heroicons/react/20/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst yearOptions = [2022, 2021];\nconst BarChart = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [chartOptions, setChartOptions] = useState({\n    series: [{\n      name: 'Net Profit',\n      data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n    }, {\n      name: 'Revenue',\n      data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n    }, {\n      name: 'Free Cash Flow',\n      data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\n    }],\n    options: {\n      chart: {\n        type: 'bar',\n        height: 400,\n        toolbar: {\n          show: false\n        }\n      },\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '55%',\n          endingShape: 'rounded'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n      },\n      yaxis: {\n        title: {\n          text: '$ (thousands)'\n        }\n      },\n      fill: {\n        opacity: 1\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \" thousands\";\n          }\n        }\n      }\n    }\n  });\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = year => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3 my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold items-center justify-center flex\",\n        children: \"Patients visit by Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"button\",\n          onClick: toggleDropdown,\n          className: \"px-3 py-2 light-bg-L border border-[#667fd1] head-6 green-H flex items-center gap-2 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-list-container dropdown-end light-bg-L dark-M body-N p-2 shadow rounded-box\",\n          style: {\n            width: \"140px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-list\",\n            children: yearOptions === null || yearOptions === void 0 ? void 0 : yearOptions.map((el, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              role: \"button\",\n              onClick: () => handleSelect(el),\n              className: \"cursor-pointer hover:bg-gray-200 p-2 rounded\",\n              children: el\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n        options: chartOptions.options,\n        series: chartOptions.series,\n        type: \"bar\",\n        height: 350\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"html-dist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(BarChart, \"U7l35tTiIitg9hgy0/QAf8WhBME=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useRef","useState","ReactApexChart","Menu","MenuButton","MenuItem","MenuItems","ChevronDownIcon","jsxDEV","_jsxDEV","yearOptions","BarChart","_s","isOpen","setIsOpen","chartOptions","setChartOptions","series","name","data","options","chart","type","height","toolbar","show","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","width","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","toggleDropdown","handleSelect","year","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","style","map","el","idx","id","_c","$RefreshReg$"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Dashboard/components/charts/BarChart.jsx"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/react'\r\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\r\n\r\nconst yearOptions = [\r\n    2022, 2021,\r\n];\r\nconst BarChart = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n\r\n\r\n    const [chartOptions, setChartOptions] = useState({\r\n        series: [\r\n            {\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58, 63, 60, 66],\r\n            },\r\n            {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105, 91, 114, 94],\r\n            },\r\n            {\r\n                name: 'Free Cash Flow',\r\n                data: [35, 41, 36, 26, 45, 48, 52, 53, 41],\r\n            },\r\n        ],\r\n        options: {\r\n            chart: {\r\n                type: 'bar',\r\n                height: 400,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: '55%',\r\n                    endingShape: 'rounded',\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent'],\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\r\n            },\r\n            yaxis: {\r\n                title: {\r\n                    text: '$ (thousands)',\r\n                },\r\n            },\r\n            fill: {\r\n                opacity: 1,\r\n            },\r\n            tooltip: {\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$ \" + val + \" thousands\";\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    });\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const handleSelect = (year) => {\r\n\r\n        setIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className='p-3 my-3'>\r\n            <div className='flex justify-between'>\r\n                <h3 className='text-lg font-bold items-center justify-center flex'>Patients visit by Gender</h3>\r\n                <div className=\"custom-dropdown \">\r\n                    <div\r\n                        role=\"button\"\r\n                        onClick={toggleDropdown}\r\n                        className=\"px-3 py-2 light-bg-L border border-[#667fd1] head-6 green-H flex items-center gap-2 rounded-lg\"\r\n                    >\r\n                        <p>Year</p>\r\n                        <ChevronDownIcon className=\"w-5 h-5\" />\r\n                    </div>\r\n\r\n                    {isOpen && (\r\n                        <div className=\"dropdown-list-container dropdown-end light-bg-L dark-M body-N p-2 shadow rounded-box\" style={{ width: \"140px\" }}>\r\n                            <ul className=\"dropdown-list\">\r\n                                {yearOptions?.map((el, idx) => (\r\n                                    <li\r\n                                        role=\"button\"\r\n                                        key={idx}\r\n                                        onClick={() => handleSelect(el)}\r\n                                        className=\"cursor-pointer hover:bg-gray-200 p-2 rounded\"\r\n                                    >\r\n                                        {el}\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n            <div id=\"chart\" >\r\n                <ReactApexChart\r\n                    options={chartOptions.options}\r\n                    series={chartOptions.series}\r\n                    type=\"bar\"\r\n                    height={350}\r\n                />\r\n            </div>\r\n            <div id=\"html-dist\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}