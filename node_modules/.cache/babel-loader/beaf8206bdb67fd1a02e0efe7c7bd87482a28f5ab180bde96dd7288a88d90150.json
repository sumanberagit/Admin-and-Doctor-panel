{"ast":null,"code":"var _jsxFileName = \"C:\\\\Admin-and-doctor-dashboard\\\\dashboard\\\\src\\\\pages\\\\Doctor\\\\DoctorProfile\\\\components\\\\TimeTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorsList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    const fetchDoctors = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/doctors\");\n        setDoctors(response.data.doctors); // Set the doctors data\n      } catch (error) {\n        console.error(\"Error fetching doctors data:\", error);\n      }\n    };\n    fetchDoctors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctors List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: `${doctor.firstName} ${doctor.lastName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", doctor.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Contact: \", doctor.contact]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", doctor.Departments]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Gender: \", doctor.Gender]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bio: \", doctor.bio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Checkup Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: doctor.checkupData.map(checkup => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), \" \", new Date(checkup.date).toLocaleDateString(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: checkup.times.map(time => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [time.startTime, \" - \", time.endTime, \" (\", time.status ? \"Available\" : \"Not Available\", \")\"]\n              }, time._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this)]\n          }, checkup.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, doctor._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorsList, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = DoctorsList;\nexport default DoctorsList;\nvar _c;\n$RefreshReg$(_c, \"DoctorsList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DoctorsList","_s","doctors","setDoctors","fetchDoctors","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","firstName","lastName","email","contact","Departments","Gender","bio","checkupData","checkup","Date","date","toLocaleDateString","times","time","startTime","endTime","status","_id","_c","$RefreshReg$"],"sources":["C:/Admin-and-doctor-dashboard/dashboard/src/pages/Doctor/DoctorProfile/components/TimeTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DoctorsList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/doctors\");\r\n        setDoctors(response.data.doctors); // Set the doctors data\r\n      } catch (error) {\r\n        console.error(\"Error fetching doctors data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Doctors List</h1>\r\n      <ul>\r\n        {doctors.map((doctor) => (\r\n          <li key={doctor._id}>\r\n            <h2>{`${doctor.firstName} ${doctor.lastName}`}</h2>\r\n            <p>Email: {doctor.email}</p>\r\n            <p>Contact: {doctor.contact}</p>\r\n            <p>Department: {doctor.Departments}</p>\r\n            <p>Gender: {doctor.Gender}</p>\r\n            <p>Bio: {doctor.bio}</p>\r\n            <p>Checkup Data:</p>\r\n            <ul>\r\n              {doctor.checkupData.map((checkup) => (\r\n                <li key={checkup.date}>\r\n                  <strong>Date:</strong>{\" \"}\r\n                  {new Date(checkup.date).toLocaleDateString()}\r\n                  <ul>\r\n                    {checkup.times.map((time) => (\r\n                      <li key={time._id}>\r\n                        {time.startTime} - {time.endTime} (\r\n                        {time.status ? \"Available\" : \"Not Available\"})\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorsList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}