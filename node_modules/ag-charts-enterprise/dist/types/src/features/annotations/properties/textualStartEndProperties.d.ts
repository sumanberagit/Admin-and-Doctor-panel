import { _ModuleSupport } from 'ag-charts-community';
import { type AnnotationContext, type AnnotationOptionsColorPickerType, type Padding } from '../annotationTypes';
declare const TextualStartEndProperties_base: (abstract new (...args: any[]) => {
    id: string;
    isValidWithContext(_context: AnnotationContext, warningPrefix: string): boolean;
    getDefaultColor(colorPickerType: AnnotationOptionsColorPickerType): string | undefined;
    locked?: boolean | undefined;
    visible?: boolean | undefined;
    set(properties: object): any;
    isValid<TContext = Omit<object, "type">>(this: TContext, warningPrefix?: string | undefined): boolean;
    toJson<J>(this: J): object;
}) & {
    new (...args: any[]): {
        start: import("../annotationProperties").PointProperties;
        end: import("../annotationProperties").PointProperties;
    };
} & {
    new (...args: any[]): {
        handle: import("../annotationProperties").HandleProperties;
    };
} & {
    new (...args: any[]): {
        padding?: number | undefined;
        textAlign: import("ag-charts-community").TextAlign;
        formatter?: import("ag-charts-community").Formatter<import("../annotationProperties").AxisLabelFormatterParams> | undefined;
    };
} & {
    new (...args: any[]): {
        fontStyle?: import("ag-charts-community").FontStyle | undefined;
        fontWeight?: import("ag-charts-community").FontWeight | undefined;
        fontSize: number;
        fontFamily: string;
        color?: string | undefined;
    };
} & typeof _ModuleSupport.BaseProperties;
export declare class TextualStartEndProperties extends TextualStartEndProperties_base {
    text: string;
    position: 'top' | 'center' | 'bottom';
    alignment: 'left' | 'center' | 'right';
    placement: 'inside' | 'outside';
    width?: number;
    placeholderText?: string;
    isValidWithContext(_context: AnnotationContext, warningPrefix?: string): boolean;
    getDefaultColor(_colorPickerType: AnnotationOptionsColorPickerType): string | undefined;
    getDefaultOpacity(_colorPickerType: AnnotationOptionsColorPickerType): number | undefined;
    getPlaceholderColor(): string | undefined;
    getPadding(): Padding;
    getTextInputCoords(context: AnnotationContext): {
        x: number;
        y: number;
    };
}
export {};
