import { type AnnotationContext, type AnnotationOptionsColorPickerType, AnnotationType, TextualAnnotationType } from './annotationTypes';
import type { AnnotationProperties, AnnotationScene, TextualPropertiesType } from './annotationsSuperTypes';
import { CalloutProperties } from './callout/calloutProperties';
import { CommentProperties } from './comment/commentProperties';
import { HorizontalLineProperties, VerticalLineProperties } from './cross-line/crossLineProperties';
import { DisjointChannelProperties } from './disjoint-channel/disjointChannelProperties';
import { LineProperties } from './line/lineProperties';
import { NoteProperties } from './note/noteProperties';
import { ParallelChannelProperties } from './parallel-channel/parallelChannelProperties';
import { TextProperties } from './text/textProperties';
type Constructor<T = {}> = new (...args: any[]) => T;
export declare const annotationDatums: Record<AnnotationType, Constructor<AnnotationProperties>>;
export declare const annotationScenes: Record<AnnotationType, Constructor<AnnotationScene>>;
export declare function updateAnnotation(node: AnnotationScene, datum: AnnotationProperties, context: AnnotationContext): void;
export declare function getTypedDatum(datum: unknown): CalloutProperties | CommentProperties | HorizontalLineProperties | VerticalLineProperties | DisjointChannelProperties | LineProperties | NoteProperties | ParallelChannelProperties | TextProperties | undefined;
export declare function isLineType(datum: unknown): boolean;
export declare function isChannelType(datum: unknown): boolean;
export declare function isTextType(datum: unknown): datum is TextualPropertiesType;
export declare function hasFontSize(datum?: AnnotationProperties): boolean;
export declare function hasLineColor(datum?: AnnotationProperties): boolean;
export declare function hasFillColor(datum?: AnnotationProperties): boolean;
export declare function hasTextColor(datum?: AnnotationProperties): boolean;
export declare function setDefaults({ datum, defaultColors, defaultFontSizes, }: {
    datum: AnnotationProperties;
    defaultColors: Map<AnnotationType | TextualAnnotationType, Map<AnnotationOptionsColorPickerType, [string, string, number] | undefined>>;
    defaultFontSizes: Map<TextualAnnotationType, number | undefined>;
}): void;
export declare function setFontsize(datum: TextualPropertiesType, annotationType: TextualAnnotationType, fontSize: number): void;
export declare function setColor(datum: AnnotationProperties, colorPickerType: AnnotationOptionsColorPickerType, colorOpacity: string, color: string, opacity: number): void;
export {};
